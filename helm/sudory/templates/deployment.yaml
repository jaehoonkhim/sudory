---
{{if .Values.agent.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-sudory-agent
  namespace: {{ .Release.Namespace }}
  labels:
    sudory: agent
spec:
  selector:
    matchLabels:
      sudory:  {{ .Release.Name }}-sudory-agent
  replicas: 1
  template:
    metadata:
      labels:
        sudory: {{ .Release.Name }}-sudory-agent
    spec:
      serviceAccountName: {{ .Release.Name }}-sudoryagent-controller
      containers:
        - name: {{ .Release.Name }}-sudory-agent
          image: "{{ .Values.agent.image }}"
          env:
            {{- range $key, $value := .Values.agent.environment_variable.data }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $.Release.Name }}-sudory-agent-configmap
                  key: {{ $key }}
            {{- end -}}

{{- end }}
---
{{if .Values.manager.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-sudory-manager
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      sudory: {{ .Release.Name }}-manager
  replicas: 1
  template:
    metadata:
      labels:
        sudory: {{ .Release.Name }}-manager
    spec:
      containers:
        - name: {{ .Release.Name }}-sudory-manager
          image: {{ .Values.manager.image }}
          ports:
            - containerPort: {{ .Values.manager.containerPort }}
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            {{- range $key, $value := .Values.manager.environment_variable.data }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $.Release.Name }}-sudory-manager-configmap
                  key: {{ $key }}
            {{- end -}}
            {{- range $key, $value := .Values.manager.secret_variable.data }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}-sudory-secret
                  key: {{ $key }}
                {{- end }}
          livenessProbe:
            tcpSocket:
              port: 8099
            initialDelaySeconds: 15
            timeoutSeconds: 15
          {{ if .Values.manager.managerrule.enabled}}
          volumeMounts:
            - mountPath: /app/conf/rules
              name: {{ .Release.Name }}-sudory-manager-rules-volume
          {{- end }}
          {{- if .Values.manager.managerrule.enabled}}
      volumes:
        - configMap:
            defaultMode: 420
            name: {{ .Release.Name }}-sudory-manager-rules-configmap
          name: {{ .Release.Name }}-sudory-manager-rules-volume
          {{- end}}
{{- end }}
