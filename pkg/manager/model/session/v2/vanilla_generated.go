// Code generated by Ice-cream-maker DO NOT EDIT.
package v2
 
func (Session_essential) ColumnNames() []string {
	return []string{
 		"cluster_uuid",
 		"token",
 		"issued_at_time",
 		"expiration_time",
	}
}
 
func (Session) ColumnNames() []string {
	return []string{
 		"cluster_uuid",
 		"token",
 		"issued_at_time",
 		"expiration_time",
 		"id",
 		"uuid",
 		"created",
 		"updated",
 		"deleted",
	}
}
 
func (Session_essential) ColumnNamesWithAlias() []string {
	return []string{
 		"cluster_uuid",
 		"token",
 		"issued_at_time",
 		"expiration_time",
	}
}
 
func (Session) ColumnNamesWithAlias() []string {
	return []string{
 		"cluster_uuid",
 		"token",
 		"issued_at_time",
 		"expiration_time",
 		"id",
 		"uuid",
 		"created",
 		"updated",
 		"deleted",
	}
}
 
func (row Session_essential) Values() []interface{} {
	return []interface{}{
		row.ClusterUuid,
		row.Token,
		row.IssuedAtTime,
		row.ExpirationTime,
	}
}
 
func (row Session) Values() []interface{} {
	return []interface{}{
		row.ClusterUuid,
		row.Token,
		row.IssuedAtTime,
		row.ExpirationTime,
		row.ID,
		row.Uuid,
		row.Created,
		row.Updated,
		row.Deleted,
	}
}

type Scanner interface {
	Scan(dest ...interface{}) error
}
 
func (row *Session_essential) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.ClusterUuid,
		&row.Token,
		&row.IssuedAtTime,
		&row.ExpirationTime,
	)
}
 
func (row *Session) Scan(scanner Scanner) error {
	return scanner.Scan(
		&row.ClusterUuid,
		&row.Token,
		&row.IssuedAtTime,
		&row.ExpirationTime,
		&row.ID,
		&row.Uuid,
		&row.Created,
		&row.Updated,
		&row.Deleted,
	)
}
 
func (row *Session_essential) Ptrs() []interface{} {
	return []interface{}{
		&row.ClusterUuid,
		&row.Token,
		&row.IssuedAtTime,
		&row.ExpirationTime,
	}
}
 
func (row *Session) Ptrs() []interface{} {
	return []interface{}{
		&row.ClusterUuid,
		&row.Token,
		&row.IssuedAtTime,
		&row.ExpirationTime,
		&row.ID,
		&row.Uuid,
		&row.Created,
		&row.Updated,
		&row.Deleted,
	}
}
